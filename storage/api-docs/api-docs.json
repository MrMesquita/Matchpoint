{
    "openapi": "3.0.0",
    "info": {
        "title": "Matchpoint API",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000"
        }
    ],
    "paths": {
        "/api/v1/admins": {
            "get": {
                "tags": [
                    "Administrators"
                ],
                "summary": "List all administrators",
                "operationId": "e7cf36608a4fe054a3d2a3063d1246f6",
                "responses": {
                    "200": {
                        "description": "List return successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdminResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Tries access without system login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "success": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "message": {
                                                "type": "string",
                                                "example": "Unauthenticated."
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Administrators"
                ],
                "summary": "Create a new admin",
                "operationId": "0a2f955e096f4c76efa99baaec6c775c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Maria das Graças"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "maria@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "securePass123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Admin created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admins/{id}": {
            "get": {
                "tags": [
                    "Administrators"
                ],
                "summary": "Get an admin by id",
                "operationId": "d4dfee7c8c68ef8cabc91b3c4a10c8f4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin founded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Administrators"
                ],
                "summary": "Update admin data by id",
                "operationId": "3f03446867a3cf98c3392304c7c67a71",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Maria das Graças"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "maria@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "securePass123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Admin successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Administrators"
                ],
                "summary": "Remove an admin by ID",
                "operationId": "e3469dcb5cb6b6977ddc7e9e65a461cb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Destroy an admin successfully"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/arenas": {
            "get": {
                "tags": [
                    "Arenas"
                ],
                "summary": "List all arenas",
                "operationId": "9ea24081faea75c8a50bf7335fa49b05",
                "responses": {
                    "200": {
                        "description": "List returned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ArenaResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Arenas"
                ],
                "summary": "Create a new arena",
                "operationId": "0753e09bf235734e083a454495b22d90",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ArenaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Arena created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArenaResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/arenas/{id}": {
            "get": {
                "tags": [
                    "Arenas"
                ],
                "summary": "Find arena by id",
                "operationId": "27f37921239550c8eef542fcec161843",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the arena",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ArenaResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Arenas"
                ],
                "summary": "Update an existing arena",
                "operationId": "b98061c1d418f3ed32981715bf445be7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the arena to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ArenaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Arena updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArenaResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Arena not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Arena not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Arenas"
                ],
                "summary": "Delete an existing arena",
                "operationId": "b551770726186ebd76ce53e3257e1946",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the arena to delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Arena deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Arena deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Arena not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Arena not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access (unauthenticated)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/arenas/{id}/courts": {
            "get": {
                "tags": [
                    "Arenas"
                ],
                "summary": "Get courts by arena ID",
                "operationId": "00a45ba6b94d9dcc293477e46e193496",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the arena",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of courts for the specified arena",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CourtResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Arena not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Arena not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Login",
                "description": "Authenticates the user and returns a token",
                "operationId": "5db09a35f965c6ca7529ed3c3cae8e21",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Logout",
                "description": "Logs out the user and invalidates the token",
                "operationId": "8f1a443d39c3bf383f851fbb51253c64",
                "responses": {
                    "200": {
                        "description": "Logout successful"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Registration",
                "description": "Creates a new user",
                "operationId": "48e49e48019e8b141753cb515a26100b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/forgot-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Forgot password",
                "description": "User can receive a email to recovery your password",
                "operationId": "042000ff6d20fdc5057993760c2706f4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Forgot password successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/reset-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset password",
                "description": "Reset password",
                "operationId": "dca9dd1bf28d37d51687fee98dc1ab4a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthResetPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reset password successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "api/v1/courts": {
            "get": {
                "tags": [
                    "Courts"
                ],
                "summary": "List all courts",
                "operationId": "f1c98d2dddce3402738ff6f7a8446c80",
                "responses": {
                    "200": {
                        "description": "Courts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CourtResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Courts"
                ],
                "summary": "Create a new court",
                "operationId": "e02d346ddbcf89047e1505baa8993578",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CourtRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Court created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "api/v1/courts/{id}": {
            "get": {
                "tags": [
                    "Courts"
                ],
                "summary": "Get a specific court",
                "operationId": "ab4d7aaebb64f08ee59e5fd2bc26cbe3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Court ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Court retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CourtResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Court not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Courts"
                ],
                "summary": "Update a court",
                "operationId": "732bbee4f5b2db95210274a11d0b1a1d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Court ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CourtRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Court updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CourtResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Court not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Courts"
                ],
                "summary": "Delete a court",
                "operationId": "e884d66765d6113f3761910b8981ad17",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Court ID",
                        "required": true,
                        "schema": {
                            "type": "int"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Court deleted successfully"
                    },
                    "404": {
                        "description": "Court not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/courts/{courtId}/timetables": {
            "get": {
                "tags": [
                    "Courts"
                ],
                "summary": "List timetables for a specific court",
                "operationId": "ffc4f998d2e5160c0da121021ba86055",
                "parameters": [
                    {
                        "name": "courtId",
                        "in": "path",
                        "description": "ID of the court",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of timetables",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CourtTimetableResource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Courts"
                ],
                "summary": "Create a new timetable for a court",
                "operationId": "700f1c1f9f12c6e7deaf425d8ce08e3f",
                "parameters": [
                    {
                        "name": "courtId",
                        "in": "path",
                        "description": "ID of the court",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "day_of_week",
                                    "start_time",
                                    "end_time",
                                    "status"
                                ],
                                "properties": {
                                    "day_of_week": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "example": "08:00"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "example": "10:00"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "available",
                                            "busy"
                                        ],
                                        "example": "available"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Timetable created successfully"
                    }
                }
            }
        },
        "/api/v1/courts/{court}/timetables/{timetable}": {
            "delete": {
                "tags": [
                    "Courts"
                ],
                "summary": "Delete a specific timetable",
                "operationId": "19788cf8a5771dd398c9f02fb4701884",
                "parameters": [
                    {
                        "name": "court",
                        "in": "path",
                        "description": "ID of the court",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timetable",
                        "in": "path",
                        "description": "ID of the timetable to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Timetable deleted successfully"
                    }
                }
            }
        },
        "/api/v1/customers": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "List all customers",
                "operationId": "a29d5f0bab561196b8e3bd82422e58e6",
                "responses": {
                    "200": {
                        "description": "List of customers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomerResource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Create a new customer",
                "operationId": "1d27da36718a3e9726c873633af496da",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "surname",
                                    "phone",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "surname": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+5511999999999"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerResource"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{id}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get a customer by ID",
                "operationId": "155f59b614e1620e56fcc62e7ac86776",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the customer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Customers"
                ],
                "summary": "Update a customer",
                "operationId": "ba374f3626d9dc83865e940b91d5d6dd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the customer to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "surname": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+5511999999999"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerResource"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Customers"
                ],
                "summary": "Delete a customer",
                "operationId": "b01ba7fa065f0d5c08b1bbc777ab7108",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the customer to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Customer deleted successfully"
                    }
                }
            }
        },
        "/api/v1/profiles/": {
            "get": {
                "tags": [
                    "profiles"
                ],
                "summary": "Get a profile",
                "description": "Get a profile",
                "operationId": "c61b8de2e48944993359af6517eb6692",
                "responses": {
                    "200": {
                        "description": "List returned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProfileResponse"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Tries access without login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "success": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "message": {
                                                "type": "string",
                                                "example": "Unauthenticated."
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/profiles": {
            "put": {
                "tags": [
                    "profiles"
                ],
                "summary": "Edit a profile",
                "description": "Edit a profile",
                "operationId": "9f67a92f42b437a2721e45e9c755b439",
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Update profile."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Tries access without login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "success": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "message": {
                                                "type": "string",
                                                "example": "Unauthenticated."
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "profiles"
                ],
                "summary": "Delete a profile",
                "description": "Delete a profile",
                "operationId": "24de2e54c0b7a3c3099ceb05512a52e1",
                "responses": {
                    "200": {
                        "description": "Profile deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Deleted profile."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Tries access without login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "success": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "message": {
                                                "type": "string",
                                                "example": "Unauthenticated."
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found Or User Already deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/reservations": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "List all reservations",
                "operationId": "f69e1b7ba36cb636ee7c9d131705aa4a",
                "responses": {
                    "200": {
                        "description": "List of reservations returned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReservationResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Create a new reservation",
                "operationId": "078fd678c910e09cab484ef265a04567",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "court_id",
                                    "date",
                                    "start_time",
                                    "end_time"
                                ],
                                "properties": {
                                    "court_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-04-10"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "HH:mm:ss",
                                        "example": "14:00:00"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "HH:mm:ss",
                                        "example": "15:00:00"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "confirmed",
                                            "cancelled"
                                        ],
                                        "example": "pending"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Reservation created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/reservations/{id}": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Get a reservation by ID",
                "operationId": "20c8c5f88286b47342d256b111345dbe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reservation ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Reservation not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Cancel a reservation (admin or customer)",
                "operationId": "ac41e2c46bd9b275d492d474527572ee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reservation ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation canceled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Reservation not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/reservations/{id}/confirm": {
            "post": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Confirm a reservation (admin only)",
                "operationId": "25a736a7c0de4e5c9bbcca236db53312",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reservation ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation confirmed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Reservation not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AdminResource": {
                "required": [
                    "id",
                    "name",
                    "email",
                    "type",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "f36c8a9c-1f85-4a38-bc92-6e0e9b99d021"
                    },
                    "name": {
                        "type": "string",
                        "example": "Maria das Graças"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "maria@example.com"
                    },
                    "type": {
                        "type": "string",
                        "example": "system"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-01T08:30:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-01T08:45:00Z"
                    }
                },
                "type": "object"
            },
            "ArenaRequest": {
                "required": [
                    "name",
                    "street",
                    "number",
                    "neighborhood",
                    "city",
                    "state",
                    "zip_code"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Arena Nova"
                    },
                    "street": {
                        "type": "string",
                        "example": "Rua da Arena"
                    },
                    "number": {
                        "type": "string",
                        "example": "123"
                    },
                    "neighborhood": {
                        "type": "string",
                        "example": "Centro"
                    },
                    "city": {
                        "type": "string",
                        "example": "Recife"
                    },
                    "state": {
                        "type": "string",
                        "example": "PE"
                    },
                    "zip_code": {
                        "type": "string",
                        "example": "52000-000"
                    },
                    "admin_id": {
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "ArenaResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Arena Nova"
                    },
                    "street": {
                        "type": "string",
                        "example": "Rua da Arena"
                    },
                    "number": {
                        "type": "string",
                        "example": "123"
                    },
                    "neighborhood": {
                        "type": "string",
                        "example": "Centro"
                    },
                    "city": {
                        "type": "string",
                        "example": "Recife"
                    },
                    "state": {
                        "type": "string",
                        "example": "PE"
                    },
                    "zip_code": {
                        "type": "string",
                        "example": "52000-000"
                    },
                    "admin_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-02T18:46:22.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-02T18:46:22.000000Z"
                    },
                    "deleted_at": {
                        "type": "string",
                        "example": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "AuthResetPasswordRequest": {
                "required": [
                    "email",
                    "password",
                    "token"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "admin@email.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "12345678"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "12345678"
                    },
                    "token": {
                        "type": "string",
                        "format": "token",
                        "example": "1234534gHksE.44"
                    }
                },
                "type": "object"
            },
            "CourtRequest": {
                "required": [
                    "name",
                    "type",
                    "status"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Quadra de Tênis 1"
                    },
                    "type": {
                        "type": "string",
                        "example": "Tênis"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "available",
                            "unavailable"
                        ],
                        "example": "available"
                    }
                },
                "type": "object"
            },
            "CourtResource": {
                "description": "Quadra esportiva disponível para reservas",
                "required": [
                    "id",
                    "name",
                    "type",
                    "status",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Quadra de Tênis 1"
                    },
                    "type": {
                        "type": "string",
                        "example": "Tênis"
                    },
                    "status": {
                        "type": "string",
                        "example": "available"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-04-01T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-04-01T11:00:00Z"
                    }
                },
                "type": "object"
            },
            "CourtTimetableResource": {
                "required": [
                    "id",
                    "court_id",
                    "day_of_week",
                    "start_time",
                    "end_time"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 10
                    },
                    "court_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "day_of_week": {
                        "type": "string",
                        "example": "monday"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "HH:mm:ss",
                        "example": "08:00:00"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "HH:mm:ss",
                        "example": "18:00:00"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-04-01T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-04-01T10:30:00Z"
                    }
                },
                "type": "object"
            },
            "CustomerResource": {
                "required": [
                    "id",
                    "name",
                    "surname",
                    "phone",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "fa0d70b5-3a20-4220-a7e4-0d5b479e2739"
                    },
                    "name": {
                        "type": "string",
                        "example": "John"
                    },
                    "surname": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+5511999999999"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-04-01T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-04-01T11:00:00Z"
                    }
                },
                "type": "object"
            },
            "ForgotPasswordRequest": {
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "example@email.com"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "admin@email.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "12345678"
                    }
                },
                "type": "object"
            },
            "LoginResponse": {
                "properties": {
                    "token": {
                        "type": "string",
                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJ..."
                    }
                },
                "type": "object"
            },
            "NotFound": {
                "description": "Resource not found response",
                "required": [
                    "success",
                    "message"
                ],
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Resource not found"
                    }
                },
                "type": "object"
            },
            "ProfileResponse": {
                "required": [
                    "id",
                    "name",
                    "surname",
                    "phone",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "João"
                    },
                    "surname": {
                        "type": "string",
                        "example": "Silva"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+55 11 99999-9999"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "joao.silva@email.com"
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "12345678"
                    }
                },
                "type": "object"
            },
            "ReservationResource": {
                "required": [
                    "id",
                    "court_id",
                    "user_id",
                    "date",
                    "start_time",
                    "end_time",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 42
                    },
                    "court_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-04-10"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "HH:mm:ss",
                        "example": "14:00:00"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "HH:mm:ss",
                        "example": "15:00:00"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "confirmed",
                            "cancelled"
                        ],
                        "example": "confirmed"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-04-01T14:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-04-01T15:00:00Z"
                    }
                },
                "type": "object"
            },
            "Unauthorized": {
                "description": "Response for unauthorized access attempts",
                "required": [
                    "success",
                    "message"
                ],
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Unauthorized."
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "type": "object",
                        "example": {
                            "email": [
                                "The email field is required."
                            ]
                        }
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Administrators"
        },
        {
            "name": "Arenas"
        },
        {
            "name": "Auth"
        },
        {
            "name": "Courts"
        },
        {
            "name": "Customers"
        },
        {
            "name": "Reservations"
        },
        {
            "name": "profiles",
            "description": "profiles"
        }
    ]
}